version: '3'
services:
  ######################## CUSTOMER-API ####################
  customers_api:
    image: customers-api:1
    build:
      context: ../customers-api/.
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      mysql_db:
        condition: service_healthy
    links:
      - mysql_db
    command: sh -c './wait-for mysql_db:3306 -- npm start'
    environment:
      SPRING_DATASOURCE: mysql_db
######################## MYSQL #################### 
  mysql_db:
    image: "mysql:8.0"
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    ports:
      - 3307:3306
    environment:
      MYSQL_DATABASE: siscustomers
      MYSQL_USER: customersapi
      MYSQL_PASSWORD: nE5kMc7JCGNqwDQN
      MYSQL_ROOT_PASSWORD: nE5kMc7JCGNqwDQN
######################## SCHEDULE-API #################### 
  # schedule_api:
  #   depends_on:
  #     - mongodb
  #   build: '.'
  #   restart: unless-stopped
  #   env_file: ./.env
  #   ports:
  #     - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
  #   environment:
  #     - DB_HOST=mongodb
  #     - DB_USER=$MONGODB_USER
  #     - DB_PASSWORD=$MONGODB_PASSWORD
  #     - DB_NAME=$MONGODB_DATABASE
  #     - DB_PORT=$MONGODB_DOCKER_PORT
  #   stdin_open: true
  #   tty: true
######################## MONGO #################### 
  mongodb:
    image: mongo
    restart: always
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    ports:
      - $MONGODB_LOCAL_PORT:$MONGODB_DOCKER_PORT
    volumes:
      - db:/data/db
    networks:
      - mongo
  ######################## KAFKA ####################
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks: 
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:latest
    networks: 
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks: 
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
volumes:
  db:
networks: 
  mongo:
    driver: bridge
  broker-kafka:
    driver: bridge